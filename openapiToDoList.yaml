openapi: 3.0.1
info:
  title: Todo-Listen-Verwaltung
  description: 'Jassem, Belhaj Frej'
  contact:
    email: jassem117@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
servers:
  - url: http://127.0.0.1:5000/
tags:
  - name: Listenverwaltung
paths:
  /todo-list/{list_id}:
    get:
      tags:
        - Listenverwaltung
      summary: Get all items from list
      operationId: getList
      parameters:
        - name: list_id
          in: path
          description: list id
          required: true
          schema:
            type: string
      responses:
        200:
          description: List item returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoEntry'
        404:
          description: Invalid list id
        500:
          description: server problems  
          content: {}
    delete:
      tags:
        - Listenverwaltung
      summary: Delete a list and all its entries
      description: Deletes the specified todo list and all entries contained within it. This operation cannot be undone.
      operationId: deleteList
      parameters:
        - name: list_id
          in: path
          description: The unique identifier of the todo list to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: List and all associated entries were successfully deleted
        404:
          description: The list id provided does not exist
        500:
          description: An error occurred while attempting to delete the list
  /todo-list:
    post:
      tags:
        - Listenverwaltung
      summary: Add new list
      operationId: addList
      requestBody:
        description: list object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
        required: true
      responses:
        201:
          description: List added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        406:
          description: Invalid list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'       
        500:
          description: List could not be added
          content: {}
  /todo-list/{list_id}/entry:
    post:
      tags:
        - Eintragsverwaltung
      summary: Add new entry
      operationId: AddEntry
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      requestBody:
        description: list object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
        required: true
      responses:
        201:
          description: Entry added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        406:
          description: Invalid list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'         
        500:
          description: Entry could not be added
          content: {}
  /todo-list/{list_id}/entry/{entry_id}:
    patch:
      tags:
        - Eintragsverwaltung
      summary: Update a specific entry in a todo list
      description: Updates the specified entry by applying the JSON body attributes to the existing entry. Returns the updated entry data.
      operationId: updateEntry
      parameters:
        - name: list_id
          in: path
          description: The unique identifier of the todo list
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The unique identifier of the entry to update
          required: true
          schema:
            type: string
      requestBody:
        description: JSON object containing attributes of the entry that need to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoEntry'
      responses:
        200:
          description: Entry successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoEntry'
        404:
          description: Either the list or the entry was not found
        500:
          description: Unexpected error updating the entry
          content: {} 
    delete:
      tags:
        - Eintragsverwaltung
      summary: Delete a specific entry from a todo list
      description: Deletes a specific entry from the specified todo list. This operation is irreversible.
      operationId: deleteEntry
      parameters:
        - name: list_id
          in: path
          description: The unique identifier of the todo list from which the entry will be deleted
          required: true
          schema:
            type: string
        - name: entry_id
          in: path
          description: The unique identifier of the entry to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: Entry was successfully deleted
        404:
          description: Either the list id or the entry id provided does not exist
        500:
          description: A server error occurred that prevented the entry from being deleted.
components:
  schemas:
    TodoList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    TodoEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the entry.
        name:
          type: string
          description: The name of the entry.
        description:
          type: string
          description: A brief description of the entry.
        user_id:
          type: string
          format: uuid
          description: The identifier of the user who owns this entry.
        list_id:
          type: string
          format: uuid
          description: The identifier of the list to which this entry belongs.
          